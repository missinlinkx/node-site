<div class="jumbotron clearfix">
  <h2>Translation keys</h2>
  <p>Fill in the input below to add a new translation key for the selected app, select one from the table below to modify its corresponding strings, or delete it:</p>

  <!-- SEARCH/ADD KEY -->
  <div data-bind="visible: functionality()==='search'" class="container col-sm-6">
    <form class="form-horizontal" method="POST">

      <div class="row">
          <div class="form-group">
            <label for="app" class="col-sm-2 control-label">App</label>
            <div class="col-sm-10">
              <select data-bind="options: availableApps, value: selectedApp" class="form-control" id="app" name="app" placeholder="App"></select>
            </div>
        </div>
      </div>

      <div class="row">
        <div class="form-group">
            <label class="col-sm-2 control-label" for="key">Key</label>
            <div class="col-sm-10">
              <input data-bind="value: keyInput, valueUpdate: 'afterkeydown'" type="text" class="form-control" id="key" name="key" placeholder="originComponent##stringToBeTranslated" <% if (locals.prevReq) { %>
                                                                                                                                                                                          value= <%= locals.prevReq.key %>
                                                                                                                                                                                      <% } %> >
            </div>
        </div>
      </div>

      <div class="row">
        <div class="form-group col-sm-12">
          <div class="checkbox">
            <label>
              <input data-bind="checked: caseSensitive" id="case-sensitive" type="checkbox"> Enable case-sensitive search
            </label>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="form-group col-sm-12">
          <button type="submit" class="btn btn-success">
            <i id="submit-btn-icon" class="fa fa-plus"></i>
            <span id="submit-btn-text">Add key</span>
          </button>
          <button type="button" class="btn btn-info" id="btn-export">
            <i class="fa fa-cloud-download"></i>
            Export
          </button>
        </div>
      </div>

      <input data-bind="value: functionality" type="hidden" id="functionality" name="functionality">

    </form>
  </div>

  <!-- EDIT -->
  <div data-bind="visible:functionality()==='edit'" class="container col-sm-6">
    <form class="form-horizontal" method="POST">

      <div class="row">
          <div class="form-group">
            <label for="app" class="col-sm-2 control-label">App</label>
            <div class="col-sm-10">
              <select data-bind="options: availableApps, value: selectedApp" readonly class="form-control" id="app" name="app" placeholder="App"></select>
            </div>
        </div>
      </div>

      <div class="row">
        <div class="form-group">
            <label class="col-sm-2 control-label" for="key">Key</label>
            <div class="col-sm-10">
              <input data-bind="value: keyInput, valueUpdate: 'afterkeydown'" readonly type="text" class="form-control" id="key" name="key" placeholder="originComponent##stringToBeTranslated" <% if (locals.prevReq) { %>
                                                                                                                                                                                                  value= <%= locals.prevReq.key %>
                                                                                                                                                                                                <% } %> >
            </div>
        </div>
      </div>

      <div data-bind="foreach: availableLanguages">
        <div class="row">
          <div class="col-sm-12">
            <div class="form-group">
                <label data-bind="text: $data" class="col-sm-2 control-label" for="$data"></label>
                <div class="col-sm-10">
                  <input data-bind="value: $root.stringInputs() && $root.stringInputs()[$data], attr: {id: $data, name: $data, placeholder:$data+' translation string'}" type="text" class="form-control" <% if (locals.prevReq) { %>
                                                                                                                                                                                                            value= <%= locals.prevReq.translationString %>
                                                                                                                                                                                                          <% } %> >
                </div>
            </div>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="form-group col-sm-12">
          <button type="submit" class="btn btn-success">
            <i id="submit-btn-icon" class="fa fa-floppy-o"></i>
            <span id="submit-btn-text">Save</span>
          </button>
          <button data-bind="click: resetForm" type="button" class="btn btn-info" id="btn-reset">
            <i class="fa fa-times"></i>
            Back to key list
          </button>
        </div>
      </div>

      <input data-bind="value: functionality" type="hidden" id="functionality" name="functionality">

    </form>
  </div>


  <!-- DELETE -->
  <div data-bind="visible: functionality()==='delete'" class="container col-sm-6">
    <form class="form-horizontal" method="POST">

      <div class="row">
          <div class="form-group">
            <label for="app" class="col-sm-2 control-label">App</label>
            <div class="col-sm-10">
              <select data-bind="options: availableApps, value: selectedApp" readonly class="form-control" id="app" name="app" placeholder="App"></select>
            </div>
        </div>
      </div>

      <div class="row">
        <div class="form-group">
            <label class="col-sm-2 control-label" for="key">Key</label>
            <div class="col-sm-10">
              <input data-bind="value: keyInput, valueUpdate: 'afterkeydown'" readonly type="text" class="form-control" id="key" name="key" placeholder="originComponent##stringToBeTranslated" <% if (locals.prevReq) { %>
                                                                                                                                                                                                  value= <%= locals.prevReq.key %>
                                                                                                                                                                                                <% } %> >
            </div>
        </div>
      </div>

      <div data-bind="foreach: availableLanguages">
        <div class="row">
          <div class="col-sm-12">
            <div class="form-group">
                <label data-bind="text: $data" class="col-sm-2 control-label" for="$data"></label>
                <div class="col-sm-10">
                  <input data-bind="value: $root.stringInputs() && $root.stringInputs()[$data], attr: {id: $data, name: $data, placeholder:$data+' translation string'}" readonly type="text" class="form-control" <% if (locals.prevReq) { %>
                                                                                                                                                                                                            value= <%= locals.prevReq.translationString %>
                                                                                                                                                                                                          <% } %> >
                </div>
            </div>
          </div>
        </div>
      </div>


      <div class="row">
        <div class="form-group col-sm-12">
          <em>Are you sure you want to permanently delete this key and its bound strings?</em>
        </div>
      </div>
      <div class="row">
        <div class="form-group col-sm-12">
          <button type="submit" class="btn btn-danger">
            <i id="submit-btn-icon" class="fa fa-trash"></i>
            <span id="submit-btn-text">Delete</span>
          </button>
          <button data-bind="click: resetForm" type="button" class="btn btn-info" id="btn-reset">
            <i class="fa fa-times"></i>
            Back to key list
          </button>
        </div>
      </div>

      <input data-bind="value: functionality" type="hidden" id="functionality" name="functionality">

    </form>
  </div>

</div>

<div data-bind="visible: functionality()==='search'" class="jumbotron clearfix">
  <table class="table table-hover">
    <thead>
      <tr>
        <!-- <th>Language</th> -->
        <!-- <th>App</th> -->
        <th>Keys</th>
        <!-- <th>Translation String</th> -->
        <th>Modify</th>
        <th>Delete</th>
      </tr>
    </thead>
    <tbody id="tBody" data-bind="foreach: filteredTranslations">

          <tr>
            <!-- <td data-bind="text: language" class="language"></td> -->
            <!-- <td data-bind="text: app" class="app"></td> -->
            <td ><strong data-bind="text: key" class="key"></strong></td>
            <!-- <td data-bind="text: translationString" class="translationString"></td> -->
            <td class="translation-table-select">
              <button data-bind="click: $root.selectRow" type="button" class="btn btn-info" style="width:80px;">
                <i class="fa fa-pencil-square-o fa-lg"></i>
              </button>
            </td>
            <td class="translation-table-delete">
              <button data-bind="click: $root.selectDelete" type="button" class="btn btn-warning" style="width:80px;">
                <i class="fa fa-times"></i>
              </button>
            </td>
          </tr>

    </tbody>
  </table>
</div>

<%- contentFor('pageJS') %>
<script type="text/javascript">
  // function select (btn) {
  //   var idx = $(btn).data("idx").toString();
  //   var targetRow = "table #tBody #translation-row-"+idx;
  //
  //   var $appName = $(targetRow+" .app").text();
  //   var $lang = $(targetRow+" .language").text();
  //   var $key = $(targetRow+" .key").text();
  //   var $translationString = $(targetRow+" .translationString").text();
  //
  //   $("#app").val($appName).attr('readonly', 'readonly');
  //   $("#language").val($lang).attr('readonly', 'readonly');
  //   $("#key").val($key).attr('readonly', 'readonly');
  //   $("#translationString").val($translationString);
  //
  //   $("#functionality").val("edit");
  //   $("#submit-btn-text").text("Save");
  //   $("#submit-btn-icon").removeClass("fa-plus").addClass("fa-floppy-o");
  // }
  //
  // function reset () {
  //   $("#app").val("").attr('readonly', null);
  //   $("#language").val("").attr('readonly', null);
  //   $("#key").val("").attr('readonly', null);
  //   $("#translationString").val("");
  //
  //   $("#functionality").val("add");
  //   $("#submit-btn-text").text("Add");
  //   $("#submit-btn-icon").removeClass("fa-floppy-o").addClass("fa-plus");
  //
  // }

  // $("#btn-reset").on('click', reset);

  function objectify() {
    var translations = {};
    $("#tBody tr").each(function (idx,elem) {
      var $elem = $(elem);
      if ($elem.hasClass("search-result-true") || $elem.attr("class") === "" || !$elem.attr("class")) {
        var $elemid = "#"+$elem.attr("id").toString();
        var key = $($elemid+" .key").text();
        var $translationString = $($elemid+" .translationString").text();
        translations[key] = $translationString; //why in the Norse Gods' name does this not work if I call it $key? :P
      }
    });
    return translations;
  }

  $("#btn-export").on('click', fExport);

  function makeTextFile(text) {
    var textFile = null;
    var data = new Blob([text], {type: 'text/plain'});

    // If we are replacing a previously generated file we need to
    // manually revoke the object URL to avoid memory leaks.
    if (textFile !== null) {
      window.URL.revokeObjectURL(textFile);
    }

    textFile = window.URL.createObjectURL(data);

    // returns a URL you can use as a href
    return textFile;
  };

  function fExport() {
    var transJSON = objectify();

    var link = document.createElement('a');
    link.setAttribute('download', 'translation.json');
    link.href = makeTextFile(JSON.stringify(transJSON, null, 2));
    document.body.appendChild(link);

    // wait for the link to be added to the document
    window.requestAnimationFrame(function () {
      var event = new MouseEvent('click');
      link.dispatchEvent(event);
      document.body.removeChild(link);
    });
  }
//
//   function search() {
//
//     var langInput = $('#language').val(),
//       appInput = $('#app').val(),
//       keyInput = $('#key').val(),
//       stringInput= $('#translationString').val();
//
//
//     $("tr.search-result-true").removeClass("search-result-true");
//     $("tr.search-result-false").removeClass("search-result-false");
//
//     if (!langInput && !appInput && !keyInput && !stringInput) {
//       return;
//     }
//
//     // $("#tBody tr").each(function(idx,elem) {
//     //   var $elem = $(elem);
//     //
//     //   if (!$('#case-sensitive').prop('checked')) {
//     //     // if (((!langInput) || ($elem.data("language").toUpperCase().startsWith(langInput.toUpperCase()))) &&
//     //     // ((!appInput) || ($elem.data("app").toUpperCase().indexOf(appInput.toUpperCase())!==-1)) &&
//     //     // ((!keyInput) || ($elem.data("key").toUpperCase().indexOf(keyInput.toUpperCase())!==-1)) &&
//     //     // ((!stringInput) || ($elem.data("string").toUpperCase().indexOf(stringInput.toUpperCase())!==-1)))
//     //     // {
//     //     //   $elem.addClass("search-result-true");
//     //     //
//     //     // } else {
//     //     //   $elem.addClass("search-result-false");
//     //     // }
//     //
//     //   } else {
//     //     if (((langInput) && ($elem.data("language").startsWith(langInput))) ||
//     //       ((appInput) && ($elem.data("app").indexOf(appInput)!==-1)) ||
//     //       ((keyInput) && ($elem.data("key").indexOf(keyInput)!==-1)) ||
//     //       ((stringInput) && ($elem.data("string").indexOf(stringInput)!==-1)))
//     //     {
//     //       $elem.addClass("search-result-true");
//     //
//     //     } else {
//     //       $elem.addClass("search-result-false");
//     //     }
//     //   }
//     //
//     //
//     // });
//
//   }
//
// search();



// function flattenGroups () {
//   var groupsByKey = <%- JSON.stringify(locals.groupsByKey) %>;
//
//   var flat = [];
//
//   Object.keys(groupsByKey).forEach(function(listOfObj,idx){
//     groupsByKey[listOfObj].forEach(function(translationObj,idxT){
//       flat.push(translationObj);
//     });
//   });
//
//   return flat;
// }

function viewModel() {
  var self = this;

  self.functionality = ko.observable('search');

  self.keyInput = ko.observable();
  self.stringInputs = ko.observable();

  self.keyArray = <%- JSON.stringify(locals.allKeys) %>;

  self.availableLanguages = ko.observableArray(<%- JSON.stringify(locals.languages) %>);

  self.availableApps = ko.observableArray(<%- JSON.stringify(locals.apps) %>);
  self.selectedApp = ko.observable(<%- JSON.stringify(locals.selectedApp) %>);

  self.caseSensitive = ko.observable(false);

  self.filteredTranslations = ko.computed(function () {
    if (self.functionality() === 'edit') {
      return;
    }

    if (!self.keyInput()) {
      return self.keyArray;
    }

    if (!self.caseSensitive()) {
      return ko.utils.arrayFilter(self.keyArray, function(translation) {
        return (!self.keyInput() || translation.key.toUpperCase().indexOf(self.keyInput().toUpperCase()) !== -1);
      });
    } else {
      return ko.utils.arrayFilter(self.keyArray, function(translation) {
        return (!self.keyInput() || translation.key.indexOf(self.keyInput()) !== -1);
      });
    }
  });

  function navigator() {
    return location.href="/add-translation?app="+self.selectedApp();
  }

  self.selectedApp.subscribe(navigator);

  self.selectRow = function (translation) {
    self.keyInput(translation.key);
    self.stringInputs(translation.translationStrings);
    self.functionality('edit');
  }

  self.getLanguageInput = function (languageCode) {
    return self.stringInputs()[languageCode];
  }

  self.resetForm = function () {
    self.keyInput('');
    self.stringInputs({});
    self.functionality('search');
  }

  self.selectDelete = function (translation) {
    self.keyInput(translation.key);
    self.stringInputs(translation.translationStrings);
    self.functionality('delete');
  }

}

ko.applyBindings(new viewModel());
</script>
